---
swagger: "2.0"
info:
  description: "An API that allows an external agent to recommend a change to an OnDemand\n\
    service. In this version, only bandwidth changes are supported.\nNote that this\
    \ API requires HTTP headers to be set for all calls. See the\nswagger JSON file\
    \ \"securityDefinitions\" section for more information\n"
  version: "1.0.0"
  title: "OnDemand Performance Recommendation API"
  contact:
    email: "simon.farrell@colt.net"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/simonfarrell/OnDemandPerformanceRecommendation/1.0.0"
tags:
- name: "standard"
  description: "Operations available to all"
schemes:
- "https"
security:
- appID: []
  appHash: []
paths:
  /performance/status:
    get:
      tags:
      - "standard"
      summary: "checks API availability"
      description: "Send a GET request with your API token to check both that the\
        \ token is recognised and that the API is up and running\n"
      operationId: "checkstatus"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "token is valid and API is available"
          schema:
            type: "object"
        403:
          description: "Missing or invalid signature"
        404:
          description: "API not available"
      x-swagger-router-controller: "Standard"
  /performance/recommendation/{recId}:
    get:
      tags:
      - "standard"
      summary: "get the state of a previously submitted recommendation"
      operationId: "getRecommendationStatus"
      produces:
      - "application/json"
      parameters:
      - name: "recId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "details of the recommendation"
          schema:
            $ref: "#/definitions/RecommendationState"
        403:
          description: "Missing or invalid signature"
        404:
          description: "Recommendation not found"
      x-swagger-router-controller: "Standard"
  /performance/recommendation:
    post:
      tags:
      - "standard"
      summary: "submits a recommended action"
      description: "Adds a recommended action for a specified service"
      operationId: "submitRecommendation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "recommendation"
        description: "Recommendation being made"
        required: false
        schema:
          $ref: "#/definitions/Recommendation"
      responses:
        201:
          description: "Recommendation accepted"
          schema:
            $ref: "#/definitions/RecommendationResponse"
        400:
          description: "invalid input, object invalid"
        403:
          description: "API signature missing or incorrect"
        404:
          description: "invalid service ID"
        409:
          description: "a recommendation for this service is already pending"
      x-swagger-router-controller: "Standard"
securityDefinitions:
  appID:
    description: "the application ID supplied by the API owner"
    type: "apiKey"
    name: "x-colt-app-id"
    in: "header"
  appHash:
    description: "a Base64-encoded SHA-256 hash signature of a payload calculated\
      \ by concatenating\n- the GMT datestamp formatted as DDMMYYYY\n- the HTTP verb\
      \ (e.g. GET)\n- the request path. \nFor example if the API GET \n/OnDemandPerformanceRecommendation/1.0.0\n\
      /performance/status was made on 19th July 2018\nthe concatenated string would\
      \ be\n19072018GET/OnDemandPerformanceRecommendation/1.0.0/performance/status\
      \ \nand a signature calculated with a secret key of 'colt' would be \nnz/ju8M0c1aZxODYXYEbAX7uNH3gJVHoE1Glm8OjV1I=\n\
      \nObtain a secret key by discussion\nwith the API owner.\n\nSee https://www.jokecamp.com/blog/examples-of-creating-base64-hashes-using-hmac-sha256-in-different-languages.\
      \ \n"
    type: "apiKey"
    name: "x-colt-app-sig"
    in: "header"
definitions:
  Status:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        example: "OK"
  Recommendation:
    type: "object"
    required:
    - "action"
    - "service_id"
    properties:
      service_id:
        type: "string"
        example: "A1234"
      action:
        type: "string"
        enum:
        - "INCREASE_BANDWIDTH"
        - "DECREASE_BANDWIDTH"
      bandwidth_change:
        type: "integer"
        format: "int32"
        minimum: 100.0
        maximum: 1000.0
    example:
      bandwidth_change: 172
      service_id: "A1234"
      action: "INCREASE_BANDWIDTH"
  RecommendationResponse:
    type: "object"
    properties:
      recommendation_id:
        type: "string"
    example:
      recommendation_id: "recommendation_id"
  RecommendationState:
    type: "object"
    required:
    - "state"
    properties:
      state:
        $ref: "#/definitions/RecommendationStateValue"
    example:
      state: {}
  RecommendationStateValue:
    type: "string"
    enum:
    - "SUCCESS"
    - "REJECTED"
    - "PENDING"
    - "FAILED"
